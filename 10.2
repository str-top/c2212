#include <SPI.h>
#include <MFRC522.h>

// --- Pin definitions ---
#define RST_PIN 9   // Reset pin (RST)
#define SS_PIN 10   // Slave Select (SDA / SS)

// --- RFID setup ---
MFRC522 mfrc522(SS_PIN, RST_PIN);  

// --- Stored authorized card ID ---
String authorizedID = "20C3935E";   // замените на UID вашей карты
String tagID = "";

// --- Output pins ---
#define GREEN_LED 6
#define RED_LED 5

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();

  pinMode(GREEN_LED, OUTPUT);
  pinMode(RED_LED, OUTPUT);

  digitalWrite(GREEN_LED, LOW);
  digitalWrite(RED_LED, LOW);

  Serial.println(F("Приложите RFID-карту для проверки доступа..."));
}

void loop() {
  if (getID()) {
    Serial.print("ID: ");
    Serial.println(tagID);

    if (tagID == authorizedID) {
      Serial.println("✅ Access Granted!");
      digitalWrite(GREEN_LED, HIGH);
      digitalWrite(RED_LED, LOW);
    } else {
      Serial.println("❌ Access Denied!");
      digitalWrite(GREEN_LED, LOW);
      digitalWrite(RED_LED, HIGH);
    }

    delay(2000);  // pause before next scan
    digitalWrite(GREEN_LED, LOW);
    digitalWrite(RED_LED, LOW);
  }
}

// --- Function to read a new card UID ---
boolean getID() {
  if (!mfrc522.PICC_IsNewCardPresent()) return false;
  if (!mfrc522.PICC_ReadCardSerial()) return false;

  tagID = "";
  for (uint8_t i = 0; i < mfrc522.uid.size; i++) {
    if (mfrc522.uid.uidByte[i] < 0x10) tagID += "0";  // ensure 2-digit HEX
    tagID += String(mfrc522.uid.uidByte[i], HEX);
  }

  tagID.toUpperCase();
  mfrc522.PICC_HaltA();
  return true;
}
